### 协议规则
3位业务码+2位功能码
例如：
- 10000 用户打开会话
- 20000 服务端推送交易数据

------------
### 协议内容

```coffeescript
 
//协议code规则   业务线3位+功能模块2位，举例：10000 用户打开会话，10001 用户关闭会话


//1.服务内部---踢人协议
{
  "uid":11111,
  "code":10010,
  "type":"inner",
  "ts":23234234,
  "msgId":2323423,
  "channleId":32423423
}





 
 
//1.客户端打开socket连接,订阅指定数据
{
  "uuid":"",//app标识
  "uid":111,//用户主键
  "code":10000,//消息协议编码
  "type":"req",//表示此消息是客户端发送给服务端的 （request）
  //元数据，扩展数据（非必填）
  "meta":{
	"desc":"客户端打开websocket连接", //不必传，
  },
  //请求数据（非必填）
  "reqinfo":{
  }
}
 
 
//1.1成功消息
{
  "uuid":"xxxx",//app标识
  "uid":1111,//用户编码
  "code":10000,//协议code
  "type":"resp",//表示服务器推送给客户端的数据（response）
  "respCode":1，//1表示成功，
  "ts":16565646445,//消息生成时间戳
  "msgId":454654646546,//消息id
  "meta":{
	"desc":"打开连接成功，已订阅相关数据", //不必传，
  },
}
//1.2失败消息
{
  "uuid":"xxxx",//app标识
  "uid":1111,//用户编码
  "code":10000,//协议code
  "type":"resp",//表示服务器推送给客户端的数据（response）
  "respCode":0，//0表示失败
  "ts":16565646445,//消息生成时间戳
  "msgId":234234234,
  "meta":{
	"desc":"打开连接失败--失败原因", //不必传，
  },
}
 
 
 
//2.客户端主动关闭socket连接
{
  "uuid":"xxxx",//app标识
  "uid":111,//用户编码
  "code":10001,//协议码
  "type":"req",//请求消息
  //扩展描述信息
  "meta":{
	"desc":"用户关闭websocket连接", //不必传，但建议传
  }
}
 
 
 
//3.ack 客户端收到推送数据后需要给服务端反馈ack消息
{
  "uuid":"xxxx",//app标识
  "uid":111,//用户编码
  "code":10002,//协议码
  "type":"req",//请求消息
  "msgId":4646466656,//服务端推送的消息id
  "meta":{
	"desc":"客户端ack确认消息收到", //不必传，但建议传
  }
}
 
 
 
//4.客户端心跳消息 每隔30秒需要发送心跳消息
{
  "uuid":"xxxx",//app标识
  "uid":111,//用户编码
  "code":10003,//协议码
  "type":"req",//请求消息
}
 
 
//5.客户端重连
{
  "uuid":"xxxx",//app标识
  "uid":111,//用户编码
  "code":10004,//协议码
  "type":"req",//请求消息
  "meta":{
	"desc":"客户端重连", //不必传，但建议传
  }
  
}
 
 
//6.客户端置后台，
{
  "uuid":"xxxx",//app标识
  "uid":111,//用户编码
  "code":10005,//协议码
  "type":"req",//请求消息
  "desc":"客户端置后台",//描述信息
  "meta":{
  	"desc":"客户端置后台"
  }
}
 
 
 
//7.客户注册相关数据推送
{
  "uuid":"xxxx",//app标识
  "uid":111,//用户编码 ，必须传
  "code":10006,//协议码 必须传
  "type":"req", //请求消息，必须传
  "meta":{
   	"desc":"订阅数据"
  	"receiveCode":20001 //服务端推送数据时code的值
  }
  //订阅数据需要的参数
  "reqInfo":{
    "dataType":"trade",//数据类型
    "merge":true,//是否合并100ms内的数据 默认 500ms
    "freq":"100ms",//推送频率 默认500ms
    "startTs":121122,//开始时间戳
    "endTs":12113131,//结束时间戳
    "subData":[{
      "mainKey":"xx",//主key
      "subKey":"xxx"//子key
    }]
  }
}

//7.1成功消息
{
  "uuid":"xxxx",//app标识
  "uid":111,//用户编码，必传
  "code":10006,//协议码，必传
  "type":"resp",//返回消息
  "msgId":323423423, //消息标识，必传
  "ts":234234234, //消息时间，必传
  "respCode":1,//服务成功
  "meta":{
	"desc":"客户端订阅相关数据成功", //非必填
  },
  //订阅的原始信息
  "reqInfo":{
    "dataType":"trade",//数据类型
    "merge":true,//是否合并100ms内的数据
    "freq":"100ms",//推送频率 默认100ms
    "startTs":121122,//开始时间戳
    "endTs":12113131,//结束时间戳
    "subData":[{
       "mainKey":"xx",//主key
       "subKey":"xxx"//子key
    }]
  }
}
//7.2失败消息
{
  "uuid":"xxxx",//app标识
  "uid":111,//用户编码，必传
  "code":10006,//协议码，必传
  "type":"resp",//返回消息
  "msgId":323423423, //消息标识，必传
  "ts":234234234, //消息时间，必传
  "respCode":0,//注册失败
  "meta":{
	"desc":"客户端订阅相关数据失败", //订阅失败
  },
  //注册信息
  "reqInfo":{
    "dataType":"trade",//数据类型
    "merge":true,//是否合并100ms内的数据
    "freq":"100ms",//推送频率 默认100ms
    "startTs":121122,//开始时间戳
    "endTs":12113131,//结束时间戳
    "subData":[{
       "mainKey":"xx",//主key
       "subKey":"xxx"//子key
    }]
  }
}
 
 
 
 
//8.客户端取消订阅相关数据
{
  "uuid":"xxxx",//app标识
  "uid":111,//用户编码，必传
  "code":10007,//协议码，必传
  "type":"req",//请求消息
  "meta":{
	"desc":"客户端取消订阅相关数据", //不必传，但建议传
	"receiveCode":20001 //服务端推送数据时code的值
  }
  //注册信息
  "reqInfo":{
    "dataType":"trade",
    "startTs":454564654//开始时间戳
    "endTs":5464646 //结束时间戳
    "subData":[{
       "mainKey":"xx",//主key
       "subKey":"xxx"//子key
    }]
  }
}
//8.1 取消注册成功
{
  "uuid":"xxxx",//app标识
  "uid":111,//用户编码，必传
  "code":10007,//协议码，必传
  "type":"resp",//请求消息
  "respCode":1,//成功标识
  "msgId":23123123123,
  "ts":2423423424,
  "meta":{
	"desc":"取消成功", //不必传，但建议传
  },
  //注册原始信息
  "reqInfo":{
    "dataType":"trade",
    "startTs":454564654//开始时间戳
    "endTs":5464646 //结束时间戳
    "subData":[{
       "mainKey":"xx",//主key
       "subKey":"xxx"//子key
    }]
  }
}
//8.2 取消注册失败
{
  "uuid":"xxxx",//app标识
  "uid":111,//用户编码，必传
  "code":10007,//协议码，必传
  "type":"resp",//请求消息
  "respCode":0,//成功标识
  "msgId":23123123123,
  "ts":2423423424,
  "meta":{
	"desc":"取消失败", //不必传，但建议传
  },
  //注册原始信息
  "reqInfo":{
    "dataType":"trade",
    "startTs":454564654//开始时间戳
    "endTs":5464646 //结束时间戳
    "subData":[{
       "mainKey":"xx",//主key
       "subKey":"xxx"//子key
    }]
  }
}
 
 
//9 获取服务器时间
{
  "uuid":"xxxx",//app标识
  "uid":111，//用户编码，必填
  "code":10008, //协议码，必填
  "type":"req"
  "meta":{
	"desc":"获取服务器时间", //非必填
  }
}
//9.1 时间校准返回的数据
{
  "uuid":"xxxx",//app标识
  "uid":111,//用户编码
  "code":10008 // 协议码
  "type":"resp",//响应消息
  "respCode":1，//成功
  "ts":121212122 //服务器返回的时间戳
  "msgId":2342343423 // 消息id
  "meta":{
	"desc":"获取时间成功"
  }
  
}
//9.2 获取时间戳失败
{
  "uuid":"xxxx",//app标识
  "uid":111,//用户编码
  "code":10008 // 协议码
  "type":"resp",//响应消息
  "respCode":0，//成功
  "ts": 0,//服务器返回的时间戳
  "msgId":2342343423 // 消息id
  "meta":{
	"desc":"获取时间失败"
  }
  
}
 
 
 
//10 获取token
{
  "uuid":"xxxx",//app标识
  "uid":1111,
  "code":10009,
  "type":"req",
  "ts":1121212121,
  "signature":"sha1|md5|等等"//签名算法
  "meta":{
	"desc":"获取token",
  }
}
//10.1 获取token成功
{
  "uuid":"xxxx",//app标识
  "uid":1111,
  "code":10009,
  "type":"resp",
  "respCode":1,
  "token":"xxxx",
  "meta":{
	"desc":"获取tocken成功",
  }
}
//10.2 获取token失败
{
  "uuid":"xxxx",//app标识
  "uid":1111,
  "code":10009,
  "type":"resp",
  "respCode":0,
  "meta":{
	"desc":"鉴权失败",
  }
}
 
 
 
 
 
//11.服务端推送实时交易数据
{
  "uuid":"xxxx",//app标识
  "uid": 111,//用户编码，必传
  "code": 20000,//协议码，必传
  "type": "resp", //响应消息
  "msgId":454545454, //消息id
  "ts":545454545454, //消息生成时间戳
  "respCode":1,//成功
  "meta":{
    "desc": "服务端推送的交易数据",
  },
  //数据
  "respInfo":[{
     "dataType":"trade",
     "data":{
     }
  }]
}
 
 
 
//12.获取历史数据
{
  "uuid":"xxxx",//app标识
  "uid":1111,
  "code":20001,
  "type":"req",
  "meta":{
	"desc":"获取K线历史数据",
  },
  "reqInfo":{
    "dataType":"xxx",
    "startTs":454564654//开始时间戳
    "endTs":5464646 //结束时间戳
  }
}

//13服务端推送
{
  "uuid":"xxxx",//app标识
  "uid": 111,//用户编码，必传
  "code": 30000,//协议码，必传
  "type": "resp", //响应消息
  "msgId":454545454, //消息id
  "ts":545454545454, //消息生成时间戳
  "respCode":1,//成功
  "meta":{
	"desc": "服务端推送的价格数据",
  },
  //数据
  "respInfo":[{
     "dataType":"xx",
     "data":{
        }
  }]
}

//14推送数据
{
  "uuid":"xxxx",//app标识
  "uid": 111,//用户编码，必传
  "code": 40000,//协议码，必传
  "type": "resp", //响应消息
  "msgId":454545454, //消息id
  "ts":545454545454, //消息生成时间戳
  "respCode":1,//成功
  "meta":{
	"desc": "服务端推送的盯盘数据",
  },
  //交易数据
  "respInfo":[{
     "dataType":"trade",
     "data":{
         }
  }]
}

```
